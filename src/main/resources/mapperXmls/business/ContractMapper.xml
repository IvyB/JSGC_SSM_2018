<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.com.jsgc.business.ContractMapper" >
  <resultMap id="BaseResultMap" type="pojo.com.jsgc.business.Contract" >
    <id column="contractId" property="contractId" jdbcType="INTEGER" />
    <result column="contractSerial" property="contractSerial" jdbcType="VARCHAR" />
    <result column="contractName" property="contractName" jdbcType="VARCHAR" />
    <result column="contractOwner" property="contractOwner" jdbcType="VARCHAR" />
    <result column="contractPartner" property="contractPartner" jdbcType="VARCHAR" />
    <result column="contractSignedTime" property="contractSignedTime" jdbcType="DATE" />
    <result column="contractMoney" property="contractMoney" jdbcType="INTEGER" />
    <result column="contractContent" property="contractContent" jdbcType="VARCHAR" />
    <result column="contractComment" property="contractComment" jdbcType="VARCHAR" />
    <result column="contractDelete" property="contractDelete" jdbcType="INTEGER" />
    <result column="projectId" property="projectId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    contractId, contractSerial, contractName, contractOwner, contractPartner, contractSignedTime, 
    contractMoney, contractContent, contractComment, contractDelete, projectId
  </sql>
  <select id="ifSerialExistAdd" parameterType="java.lang.String" resultType="java.lang.Integer" >
    SELECT  count(*)
    from contract
    where contractSerial=#{0} and contractDelete=0
  </select>
  <select id="ifSerialExistUpdt" parameterType="pojo.com.jsgc.business.Contract" resultType="java.lang.Integer">
    SELECT count(*)
    from contract
    where contractSerial=#{contractSerial} and contractId!=#{contractId} and contractDelete=0
  </select>
  <select id="getContractIDBySerial" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT contractID
    from contract
    where contractSerial = #{contractSerial,jdbcType=VARCHAR} and contractDelete=0
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from contract
    where contractId = #{contractId,jdbcType=INTEGER} and contractDelete=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from contract
    where contractId = #{contractId,jdbcType=INTEGER}
  </delete>
  <update id="deleteFakeByPrimaryKey" parameterType="java.lang.Integer">
    UPDATE contract
    SET contractDelete=1
    WHERE contractID = #{contractId,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="pojo.com.jsgc.business.Contract" >
    insert into contract (contractId, contractSerial, contractName, 
      contractOwner, contractPartner, contractSignedTime, 
      contractMoney, contractContent, contractComment, 
      contractDelete, projectId)
    values (#{contractId,jdbcType=INTEGER}, #{contractSerial,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, 
      #{contractOwner,jdbcType=VARCHAR}, #{contractPartner,jdbcType=VARCHAR}, #{contractSignedTime,jdbcType=DATE}, 
      #{contractMoney,jdbcType=INTEGER}, #{contractContent,jdbcType=VARCHAR}, #{contractComment,jdbcType=VARCHAR}, 
      #{contractDelete,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pojo.com.jsgc.business.Contract" >
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractId != null and contractId != ''" >
        contractId,
      </if>
      <if test="contractSerial != null" >
        contractSerial,
      </if>
      <if test="contractName != null" >
        contractName,
      </if>
      <if test="contractOwner != null" >
        contractOwner,
      </if>
      <if test="contractPartner != null" >
        contractPartner,
      </if>
      <if test="contractSignedTime != null" >
        contractSignedTime,
      </if>
      <if test="contractMoney != null" >
        contractMoney,
      </if>
      <if test="contractContent != null" >
        contractContent,
      </if>
      <if test="contractComment != null" >
        contractComment,
      </if>
      <if test="contractDelete != null" >
        contractDelete,
      </if>
      <if test="projectId != null" >
        projectId,
      </if>
      <if test="buildContentId !=null">
        buildContentID
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractId != null and contractId != ''" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="contractSerial != null" >
        #{contractSerial,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractOwner != null" >
        #{contractOwner,jdbcType=VARCHAR},
      </if>
      <if test="contractPartner != null" >
        #{contractPartner,jdbcType=VARCHAR},
      </if>
      <if test="contractSignedTime != null" >
        #{contractSignedTime,jdbcType=DATE},
      </if>
      <if test="contractMoney != null" >
        #{contractMoney,jdbcType=INTEGER},
      </if>
      <if test="contractContent != null" >
        #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="contractComment != null" >
        #{contractComment,jdbcType=VARCHAR},
      </if>
      <if test="contractDelete != null" >
        #{contractDelete,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="buildContentId !=null">
        #{buildContentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.com.jsgc.business.Contract" >
    update contract
    <set >
      <if test="contractSerial != null" >
        contractSerial = #{contractSerial,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null" >
        contractName = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractOwner != null" >
        contractOwner = #{contractOwner,jdbcType=VARCHAR},
      </if>
      <if test="contractPartner != null" >
        contractPartner = #{contractPartner,jdbcType=VARCHAR},
      </if>
      <if test="contractSignedTime != null" >
        contractSignedTime = #{contractSignedTime,jdbcType=DATE},
      </if>
      <if test="contractMoney != null" >
        contractMoney = #{contractMoney,jdbcType=INTEGER},
      </if>
      <if test="contractContent != null" >
        contractContent = #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="contractComment != null" >
        contractComment = #{contractComment,jdbcType=VARCHAR},
      </if>
      <if test="contractDelete != null" >
        contractDelete = #{contractDelete,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="buildContentId !=null">
        buildContentID=#{buildContentId,jdbcType=VARCHAR}
      </if>
    </set>
    where contractId = #{contractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.com.jsgc.business.Contract" >
    update contract
    set contractSerial = #{contractSerial,jdbcType=VARCHAR},
      contractName = #{contractName,jdbcType=VARCHAR},
      contractOwner = #{contractOwner,jdbcType=VARCHAR},
      contractPartner = #{contractPartner,jdbcType=VARCHAR},
      contractSignedTime = #{contractSignedTime,jdbcType=DATE},
      contractMoney = #{contractMoney,jdbcType=INTEGER},
      contractContent = #{contractContent,jdbcType=VARCHAR},
      contractComment = #{contractComment,jdbcType=VARCHAR},
      contractDelete = #{contractDelete,jdbcType=INTEGER},
      projectId = #{projectId,jdbcType=INTEGER}
    where contractId = #{contractId,jdbcType=INTEGER}
  </update>

  <!--lzq，导入Excel，获取所有的编号-->
  <select id="getSerialList" resultType="java.lang.String">
    select contractSerial
    from contract
  </select>
  <!--lzq，导入Excel，批量导入-->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into contract( contractID,contractSerial, contractName,
      contractOwner, contractPartner, contractSignedTime,
      contractMoney, contractContent, contractComment, projectID) VALUES
      <foreach collection="list" item="item" index="index" separator=",">
        ( #{item.contractId,jdbcType=INTEGER},#{item.contractSerial,jdbcType=VARCHAR}, #{item.contractName,jdbcType=VARCHAR},
        #{item.contractOwner,jdbcType=VARCHAR}, #{item.contractPartner,jdbcType=VARCHAR}, #{item.contractSignedTime,jdbcType=DATE},
        #{item.contractMoney,jdbcType=INTEGER}, #{item.contractContent,jdbcType=VARCHAR}, #{item.contractComment,jdbcType=VARCHAR}
        , #{item.projectId,jdbcType=INTEGER})
      </foreach>
  </insert>
  <!--lzq,根据搜索条件查询-->
   <resultMap id="ContractWithAssociation" type="pojo.com.jsgc.business.Contract">
       <id column="contractID" property="contractId" jdbcType="INTEGER" />
       <result column="contractSerial" property="contractSerial" jdbcType="VARCHAR" />
       <result column="contractName" property="contractName" jdbcType="VARCHAR" />
       <result column="contractOwner" property="contractOwner" jdbcType="VARCHAR" />
       <result column="contractPartner" property="contractPartner" jdbcType="VARCHAR" />
       <result column="contractSignedTime" property="contractSignedTime" jdbcType="DATE" />
       <result column="contractMoney" property="contractMoney" jdbcType="INTEGER" />
       <result column="contractContent" property="contractContent" jdbcType="VARCHAR" />
       <result column="contractComment" property="contractComment" jdbcType="VARCHAR" />
       <result column="contractDelete" property="contractDelete" jdbcType="INTEGER" />
       <result column="projectID" property="projectId" jdbcType="INTEGER" />
       <result column="projectSerial" property="projectSerial"></result>
       <association property="project" javaType="pojo.com.jsgc.business.Project">
           <id column="projectID" property="projectId"></id>
           <result column="projectName" property="projectName"></result>
       </association>
   </resultMap>
  <select id="selectByConditions" parameterType="util.com.jsgc.searchCondition.ContractSearchConditions" resultMap="ContractWithAssociation">
     SELECT c.*,p.projectName,p.projectSerial
     FROM contract c,project p
--       ,buildContent b
     WHERE c.contractDelete=0 AND
      c.projectID=p.projectID
--       AND c.buildContentID=b.buildContentID
     <if test="contractSerial!=null">
        AND c.contractSerial=#{contractSerial}
     </if>
     <if test="contractName!=null">
        AND c.contractName LIKE CONCAT('%',#{contractName},'%' )
     </if>
     <if test='contractTimeMax!=null and contractTimeMin!=null'>
        AND c.contractSignedTime>= #{contractTimeMin}
        AND  #{contractTimeMax}>= c.contractSignedTime
     </if>
     <if test="projectSerial!=null">
        AND p.projectSerial=#{projectSerial}
     </if>
     <if test="projectName!=null">
        AND p.projectName  LIKE  CONCAT('%',#{projectName},'%' )
     </if>
     <!--<if>建设内容下拉框</if>-->
     <if test='realOrder!=null and descOrNot!=null'>
         ORDER BY ${realOrder} ${descOrNot}
     </if>

  </select>
  <select id="selectAll" parameterType="util.com.jsgc.searchCondition.ContractSearchConditions" resultType="pojo.com.jsgc.business.Contract">
    select *
    from contract ct inner join project p
    on ct.projectID = p.projectID
    left OUTER join buildcontent b
    on ct.buildContentId=b.buildContentId
    where ct.contractDelete = 0
    <if test="contractSerial!=null and contractSerial!=''">
      and ct.contractSerial = #{contractSerial,jdbcType=VARCHAR}
    </if>
    <if test="contractName!=null and contractName!=''">
      and ct.contractName LIKE CONCAT('%',#{contractName},'%' )
    </if>
    <if test='contractTimeMax!=null and contractTimeMin!=null'>
      AND ct.contractSignedTime>= #{contractTimeMin}
      AND  #{contractTimeMax}>= ct.contractSignedTime
    </if>

    <if test="projectSerial!=null and projectSerial!=''">
      and p.projectSerial=#{projectSerial,jdbcType=VARCHAR}
    </if>
    <if test="projectName!=null and projectName!=''">
      and p.projectName LIKE CONCAT('%',#{projectName},'%' )
    </if>
    <if test="buildContentId!=null and buildContentId!=''">
      AND b.buildContentId=#{buildContentId,jdbcType=INTEGER}
    </if>
    <if test="userID!=null and userID!=''">
      and p.projectChargerID=#{userID}
    </if>
    <if test='realOrder!=null and descOrNot!=null'>
      ORDER BY ${realOrder} ${descOrNot}
    </if>
  </select>
  <select id="selectByProjectID" parameterType="java.lang.Integer" resultType="pojo.com.jsgc.business.Contract">
    SELECT *
    from contract
    WHERE contract.projectID=#{0};
  </select>
</mapper>