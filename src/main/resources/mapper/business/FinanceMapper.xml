<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.com.jsgc.business.FinanceMapper" >
  <resultMap id="BaseResultMap" type="com.jsgc.business.Finance" >
    <id column="financeID" property="financeId" jdbcType="INTEGER" />
    <result column="financeSerials" property="financeSerials" jdbcType="VARCHAR" />
    <result column="financeDate" property="financeDate" jdbcType="DATE" />
    <result column="financeName" property="financeName" jdbcType="VARCHAR" />
    <result column="financeMoney" property="financeMoney" jdbcType="INTEGER" />
    <result column="financeStatus" property="financeStatus" jdbcType="INTEGER" />
    <result column="financeDelete" property="financeDelete" jdbcType="INTEGER" />
    <result column="financeBorrowerID" property="financeBorrowerId" jdbcType="INTEGER" />
    <result column="financeLenderID" property="financeLenderId" jdbcType="INTEGER" />
    <result column="financeBuyOrgID" property="financeBuyOrgId" jdbcType="INTEGER" />
    <result column="financeBuyMethodID" property="financeBuyMethodId" jdbcType="INTEGER" />
    <result column="financeTypeID" property="financeTypeId" jdbcType="INTEGER" />
    <result column="payMethodID" property="payMethodId" jdbcType="INTEGER" />
    <result column="projectID" property="projectId" jdbcType="INTEGER" />
    <result column="contractID" property="contractId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    financeID, financeSerials, financeDate, financeName, financeMoney, financeStatus, 
    financeDelete, financeBorrowerID, financeLenderID, financeBuyOrgID, financeBuyMethodID, 
    financeTypeID, payMethodID, projectID, contractID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance
    where financeID = #{financeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance
    where financeID = #{financeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsgc.business.Finance" >
    insert into finance (financeID, financeSerials, financeDate, 
      financeName, financeMoney, financeStatus, 
      financeDelete, financeBorrowerID, financeLenderID, 
      financeBuyOrgID, financeBuyMethodID, financeTypeID, 
      payMethodID, projectID, contractID
      )
    values (#{financeId,jdbcType=INTEGER}, #{financeSerials,jdbcType=VARCHAR}, #{financeDate,jdbcType=DATE},
      #{financeName,jdbcType=VARCHAR}, #{financeMoney,jdbcType=INTEGER}, #{financeStatus,jdbcType=INTEGER},
      #{financeDelete,jdbcType=INTEGER}, #{financeBorrowerId,jdbcType=INTEGER}, #{financeLenderId,jdbcType=INTEGER},
      #{financeBuyOrgId,jdbcType=INTEGER}, #{financeBuyMethodId,jdbcType=INTEGER}, #{financeTypeId,jdbcType=INTEGER},
      #{payMethodId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jsgc.business.Finance" >
    insert into finance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="financeId != null" >
        financeID,
      </if>
      <if test="financeSerials != null" >
        financeSerials,
      </if>
      <if test="financeDate != null" >
        financeDate,
      </if>
      <if test="financeName != null" >
        financeName,
      </if>
      <if test="financeMoney != null" >
        financeMoney,
      </if>
      <if test="financeStatus != null" >
        financeStatus,
      </if>
      <if test="financeDelete != null" >
        financeDelete,
      </if>
      <if test="financeBorrowerId != null" >
        financeBorrowerID,
      </if>
      <if test="financeLenderId != null" >
        financeLenderID,
      </if>
      <if test="financeBuyOrgId != null" >
        financeBuyOrgID,
      </if>
      <if test="financeBuyMethodId != null" >
        financeBuyMethodID,
      </if>
      <if test="financeTypeId != null" >
        financeTypeID,
      </if>
      <if test="payMethodId != null" >
        payMethodID,
      </if>
      <if test="projectId != null" >
        projectID,
      </if>
      <if test="contractId != null" >
        contractID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="financeId != null" >
        #{financeId,jdbcType=INTEGER},
      </if>
      <if test="financeSerials != null" >
        #{financeSerials,jdbcType=VARCHAR},
      </if>
      <if test="financeDate != null" >
        #{financeDate,jdbcType=DATE},
      </if>
      <if test="financeName != null" >
        #{financeName,jdbcType=VARCHAR},
      </if>
      <if test="financeMoney != null" >
        #{financeMoney,jdbcType=INTEGER},
      </if>
      <if test="financeStatus != null" >
        #{financeStatus,jdbcType=INTEGER},
      </if>
      <if test="financeDelete != null" >
        #{financeDelete,jdbcType=INTEGER},
      </if>
      <if test="financeBorrowerId != null" >
        #{financeBorrowerId,jdbcType=INTEGER},
      </if>
      <if test="financeLenderId != null" >
        #{financeLenderId,jdbcType=INTEGER},
      </if>
      <if test="financeBuyOrgId != null" >
        #{financeBuyOrgId,jdbcType=INTEGER},
      </if>
      <if test="financeBuyMethodId != null" >
        #{financeBuyMethodId,jdbcType=INTEGER},
      </if>
      <if test="financeTypeId != null" >
        #{financeTypeId,jdbcType=INTEGER},
      </if>
      <if test="payMethodId != null" >
        #{payMethodId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsgc.business.Finance" >
    update finance
    <set >
      <if test="financeSerials != null" >
        financeSerials = #{financeSerials,jdbcType=VARCHAR},
      </if>
      <if test="financeDate != null" >
        financeDate = #{financeDate,jdbcType=DATE},
      </if>
      <if test="financeName != null" >
        financeName = #{financeName,jdbcType=VARCHAR},
      </if>
      <if test="financeMoney != null" >
        financeMoney = #{financeMoney,jdbcType=INTEGER},
      </if>
      <if test="financeStatus != null" >
        financeStatus = #{financeStatus,jdbcType=INTEGER},
      </if>
      <if test="financeDelete != null" >
        financeDelete = #{financeDelete,jdbcType=INTEGER},
      </if>
      <if test="financeBorrowerId != null" >
        financeBorrowerID = #{financeBorrowerId,jdbcType=INTEGER},
      </if>
      <if test="financeLenderId != null" >
        financeLenderID = #{financeLenderId,jdbcType=INTEGER},
      </if>
      <if test="financeBuyOrgId != null" >
        financeBuyOrgID = #{financeBuyOrgId,jdbcType=INTEGER},
      </if>
      <if test="financeBuyMethodId != null" >
        financeBuyMethodID = #{financeBuyMethodId,jdbcType=INTEGER},
      </if>
      <if test="financeTypeId != null" >
        financeTypeID = #{financeTypeId,jdbcType=INTEGER},
      </if>
      <if test="payMethodId != null" >
        payMethodID = #{payMethodId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        projectID = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        contractID = #{contractId,jdbcType=INTEGER},
      </if>
    </set>
    where financeID = #{financeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsgc.business.Finance" >
    update finance
    set financeSerials = #{financeSerials,jdbcType=VARCHAR},
      financeDate = #{financeDate,jdbcType=DATE},
      financeName = #{financeName,jdbcType=VARCHAR},
      financeMoney = #{financeMoney,jdbcType=INTEGER},
      financeStatus = #{financeStatus,jdbcType=INTEGER},
      financeDelete = #{financeDelete,jdbcType=INTEGER},
      financeBorrowerID = #{financeBorrowerId,jdbcType=INTEGER},
      financeLenderID = #{financeLenderId,jdbcType=INTEGER},
      financeBuyOrgID = #{financeBuyOrgId,jdbcType=INTEGER},
      financeBuyMethodID = #{financeBuyMethodId,jdbcType=INTEGER},
      financeTypeID = #{financeTypeId,jdbcType=INTEGER},
      payMethodID = #{payMethodId,jdbcType=INTEGER},
      projectID = #{projectId,jdbcType=INTEGER},
      contractID = #{contractId,jdbcType=INTEGER}
    where financeID = #{financeId,jdbcType=INTEGER}
  </update>
</mapper>