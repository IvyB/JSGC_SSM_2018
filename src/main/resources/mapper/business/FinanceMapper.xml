<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.business.FinanceMapper" >
  <resultMap id="BaseResultMap" type="com.jsxm.business.Finance" >
    <id column="financeID" property="financeid" jdbcType="INTEGER" />
    <result column="financeSerials" property="financeserials" jdbcType="VARCHAR" />
    <result column="financeDate" property="financedate" jdbcType="DATE" />
    <result column="financeName" property="financename" jdbcType="VARCHAR" />
    <result column="financeMoney" property="financemoney" jdbcType="INTEGER" />
    <result column="financeStatus" property="financestatus" jdbcType="INTEGER" />
    <result column="financeDelete" property="financedelete" jdbcType="INTEGER" />
    <result column="financeBorrowerID" property="financeborrowerid" jdbcType="INTEGER" />
    <result column="financeLenderID" property="financelenderid" jdbcType="INTEGER" />
    <result column="financeBuyOrgID" property="financebuyorgid" jdbcType="INTEGER" />
    <result column="financeBuyMethodID" property="financebuymethodid" jdbcType="INTEGER" />
    <result column="financeTypeID" property="financetypeid" jdbcType="INTEGER" />
    <result column="payMethodID" property="paymethodid" jdbcType="INTEGER" />
    <result column="projectID" property="projectid" jdbcType="INTEGER" />
    <result column="contractID" property="contractid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    financeID, financeSerials, financeDate, financeName, financeMoney, financeStatus, 
    financeDelete, financeBorrowerID, financeLenderID, financeBuyOrgID, financeBuyMethodID, 
    financeTypeID, payMethodID, projectID, contractID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance
    where financeID = #{financeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance
    where financeID = #{financeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsxm.business.Finance" >
    insert into finance (financeID, financeSerials, financeDate, 
      financeName, financeMoney, financeStatus, 
      financeDelete, financeBorrowerID, financeLenderID, 
      financeBuyOrgID, financeBuyMethodID, financeTypeID, 
      payMethodID, projectID, contractID
      )
    values (#{financeid,jdbcType=INTEGER}, #{financeserials,jdbcType=VARCHAR}, #{financedate,jdbcType=DATE}, 
      #{financename,jdbcType=VARCHAR}, #{financemoney,jdbcType=INTEGER}, #{financestatus,jdbcType=INTEGER}, 
      #{financedelete,jdbcType=INTEGER}, #{financeborrowerid,jdbcType=INTEGER}, #{financelenderid,jdbcType=INTEGER}, 
      #{financebuyorgid,jdbcType=INTEGER}, #{financebuymethodid,jdbcType=INTEGER}, #{financetypeid,jdbcType=INTEGER}, 
      #{paymethodid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, #{contractid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jsxm.business.Finance" >
    insert into finance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="financeid != null" >
        financeID,
      </if>
      <if test="financeserials != null" >
        financeSerials,
      </if>
      <if test="financedate != null" >
        financeDate,
      </if>
      <if test="financename != null" >
        financeName,
      </if>
      <if test="financemoney != null" >
        financeMoney,
      </if>
      <if test="financestatus != null" >
        financeStatus,
      </if>
      <if test="financedelete != null" >
        financeDelete,
      </if>
      <if test="financeborrowerid != null" >
        financeBorrowerID,
      </if>
      <if test="financelenderid != null" >
        financeLenderID,
      </if>
      <if test="financebuyorgid != null" >
        financeBuyOrgID,
      </if>
      <if test="financebuymethodid != null" >
        financeBuyMethodID,
      </if>
      <if test="financetypeid != null" >
        financeTypeID,
      </if>
      <if test="paymethodid != null" >
        payMethodID,
      </if>
      <if test="projectid != null" >
        projectID,
      </if>
      <if test="contractid != null" >
        contractID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="financeid != null" >
        #{financeid,jdbcType=INTEGER},
      </if>
      <if test="financeserials != null" >
        #{financeserials,jdbcType=VARCHAR},
      </if>
      <if test="financedate != null" >
        #{financedate,jdbcType=DATE},
      </if>
      <if test="financename != null" >
        #{financename,jdbcType=VARCHAR},
      </if>
      <if test="financemoney != null" >
        #{financemoney,jdbcType=INTEGER},
      </if>
      <if test="financestatus != null" >
        #{financestatus,jdbcType=INTEGER},
      </if>
      <if test="financedelete != null" >
        #{financedelete,jdbcType=INTEGER},
      </if>
      <if test="financeborrowerid != null" >
        #{financeborrowerid,jdbcType=INTEGER},
      </if>
      <if test="financelenderid != null" >
        #{financelenderid,jdbcType=INTEGER},
      </if>
      <if test="financebuyorgid != null" >
        #{financebuyorgid,jdbcType=INTEGER},
      </if>
      <if test="financebuymethodid != null" >
        #{financebuymethodid,jdbcType=INTEGER},
      </if>
      <if test="financetypeid != null" >
        #{financetypeid,jdbcType=INTEGER},
      </if>
      <if test="paymethodid != null" >
        #{paymethodid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="contractid != null" >
        #{contractid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsxm.business.Finance" >
    update finance
    <set >
      <if test="financeserials != null" >
        financeSerials = #{financeserials,jdbcType=VARCHAR},
      </if>
      <if test="financedate != null" >
        financeDate = #{financedate,jdbcType=DATE},
      </if>
      <if test="financename != null" >
        financeName = #{financename,jdbcType=VARCHAR},
      </if>
      <if test="financemoney != null" >
        financeMoney = #{financemoney,jdbcType=INTEGER},
      </if>
      <if test="financestatus != null" >
        financeStatus = #{financestatus,jdbcType=INTEGER},
      </if>
      <if test="financedelete != null" >
        financeDelete = #{financedelete,jdbcType=INTEGER},
      </if>
      <if test="financeborrowerid != null" >
        financeBorrowerID = #{financeborrowerid,jdbcType=INTEGER},
      </if>
      <if test="financelenderid != null" >
        financeLenderID = #{financelenderid,jdbcType=INTEGER},
      </if>
      <if test="financebuyorgid != null" >
        financeBuyOrgID = #{financebuyorgid,jdbcType=INTEGER},
      </if>
      <if test="financebuymethodid != null" >
        financeBuyMethodID = #{financebuymethodid,jdbcType=INTEGER},
      </if>
      <if test="financetypeid != null" >
        financeTypeID = #{financetypeid,jdbcType=INTEGER},
      </if>
      <if test="paymethodid != null" >
        payMethodID = #{paymethodid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null" >
        projectID = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="contractid != null" >
        contractID = #{contractid,jdbcType=INTEGER},
      </if>
    </set>
    where financeID = #{financeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsxm.business.Finance" >
    update finance
    set financeSerials = #{financeserials,jdbcType=VARCHAR},
      financeDate = #{financedate,jdbcType=DATE},
      financeName = #{financename,jdbcType=VARCHAR},
      financeMoney = #{financemoney,jdbcType=INTEGER},
      financeStatus = #{financestatus,jdbcType=INTEGER},
      financeDelete = #{financedelete,jdbcType=INTEGER},
      financeBorrowerID = #{financeborrowerid,jdbcType=INTEGER},
      financeLenderID = #{financelenderid,jdbcType=INTEGER},
      financeBuyOrgID = #{financebuyorgid,jdbcType=INTEGER},
      financeBuyMethodID = #{financebuymethodid,jdbcType=INTEGER},
      financeTypeID = #{financetypeid,jdbcType=INTEGER},
      payMethodID = #{paymethodid,jdbcType=INTEGER},
      projectID = #{projectid,jdbcType=INTEGER},
      contractID = #{contractid,jdbcType=INTEGER}
    where financeID = #{financeid,jdbcType=INTEGER}
  </update>
</mapper>