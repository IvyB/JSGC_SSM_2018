<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.com.jsgc.business.DocumentMapper" >
  <resultMap id="BaseResultMap" type="com.jsgc.business.Document" >
    <id column="documentID" property="documentId" jdbcType="INTEGER" />
    <result column="documentSerial" property="documentSerial" jdbcType="VARCHAR" />
    <result column="documentName" property="documentName" jdbcType="VARCHAR" />
    <result column="documentUploadTime" property="documentUploadTime" jdbcType="DATE" />
    <result column="documentOwner" property="documentOwner" jdbcType="VARCHAR" />
    <result column="documentComment" property="documentComment" jdbcType="VARCHAR" />
    <result column="documentUrl" property="documentUrl" jdbcType="VARCHAR" />
    <result column="documentType" property="documentType" jdbcType="INTEGER" />
    <result column="documentDelete" property="documentDelete" jdbcType="INTEGER" />
    <result column="projectID" property="projectId" jdbcType="INTEGER" />
    <result column="contractID" property="contractId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    documentID, documentSerial, documentName, documentUploadTime, documentOwner, documentComment, 
    documentUrl, documentType, documentDelete, projectID, contractID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from document
    where documentID = #{documentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from document
    where documentID = #{documentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsgc.business.Document" >
    insert into document (documentID, documentSerial, documentName, 
      documentUploadTime, documentOwner, documentComment, 
      documentUrl, documentType, documentDelete, 
      projectID, contractID)
    values (#{documentId,jdbcType=INTEGER}, #{documentSerial,jdbcType=VARCHAR}, #{documentName,jdbcType=VARCHAR},
      #{documentUploadTime,jdbcType=DATE}, #{documentOwner,jdbcType=VARCHAR}, #{documentComment,jdbcType=VARCHAR},
      #{documentUrl,jdbcType=VARCHAR}, #{documentType,jdbcType=INTEGER}, #{documentDelete,jdbcType=INTEGER},
      #{projectId,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jsgc.business.Document" >
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="documentId != null" >
        documentID,
      </if>
      <if test="documentSerial != null" >
        documentSerial,
      </if>
      <if test="documentName != null" >
        documentName,
      </if>
      <if test="documentUploadTime != null" >
        documentUploadTime,
      </if>
      <if test="documentOwner != null" >
        documentOwner,
      </if>
      <if test="documentComment != null" >
        documentComment,
      </if>
      <if test="documentUrl != null" >
        documentUrl,
      </if>
      <if test="documentType != null" >
        documentType,
      </if>
      <if test="documentDelete != null" >
        documentDelete,
      </if>
      <if test="projectId != null" >
        projectID,
      </if>
      <if test="contractId != null" >
        contractID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="documentId != null" >
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="documentSerial != null" >
        #{documentSerial,jdbcType=VARCHAR},
      </if>
      <if test="documentName != null" >
        #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="documentUploadTime != null" >
        #{documentUploadTime,jdbcType=DATE},
      </if>
      <if test="documentOwner != null" >
        #{documentOwner,jdbcType=VARCHAR},
      </if>
      <if test="documentComment != null" >
        #{documentComment,jdbcType=VARCHAR},
      </if>
      <if test="documentUrl != null" >
        #{documentUrl,jdbcType=VARCHAR},
      </if>
      <if test="documentType != null" >
        #{documentType,jdbcType=INTEGER},
      </if>
      <if test="documentDelete != null" >
        #{documentDelete,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsgc.business.Document" >
    update document
    <set >
      <if test="documentSerial != null" >
        documentSerial = #{documentSerial,jdbcType=VARCHAR},
      </if>
      <if test="documentName != null" >
        documentName = #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="documentUploadTime != null" >
        documentUploadTime = #{documentUploadTime,jdbcType=DATE},
      </if>
      <if test="documentOwner != null" >
        documentOwner = #{documentOwner,jdbcType=VARCHAR},
      </if>
      <if test="documentComment != null" >
        documentComment = #{documentComment,jdbcType=VARCHAR},
      </if>
      <if test="documentUrl != null" >
        documentUrl = #{documentUrl,jdbcType=VARCHAR},
      </if>
      <if test="documentType != null" >
        documentType = #{documentType,jdbcType=INTEGER},
      </if>
      <if test="documentDelete != null" >
        documentDelete = #{documentDelete,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        projectID = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        contractID = #{contractId,jdbcType=INTEGER},
      </if>
    </set>
    where documentID = #{documentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsgc.business.Document" >
    update document
    set documentSerial = #{documentSerial,jdbcType=VARCHAR},
      documentName = #{documentName,jdbcType=VARCHAR},
      documentUploadTime = #{documentUploadTime,jdbcType=DATE},
      documentOwner = #{documentOwner,jdbcType=VARCHAR},
      documentComment = #{documentComment,jdbcType=VARCHAR},
      documentUrl = #{documentUrl,jdbcType=VARCHAR},
      documentType = #{documentType,jdbcType=INTEGER},
      documentDelete = #{documentDelete,jdbcType=INTEGER},
      projectID = #{projectId,jdbcType=INTEGER},
      contractID = #{contractId,jdbcType=INTEGER}
    where documentID = #{documentId,jdbcType=INTEGER}
  </update>
</mapper>