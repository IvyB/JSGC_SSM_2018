<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.com.jsgc.business.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.jsxm.business.Contract" >
    <id column="contractID" property="contractid" jdbcType="INTEGER" />
    <result column="contractSerial" property="contractserial" jdbcType="VARCHAR" />
    <result column="contractName" property="contractname" jdbcType="VARCHAR" />
    <result column="contractOwner" property="contractowner" jdbcType="VARCHAR" />
    <result column="contractPartner" property="contractpartner" jdbcType="VARCHAR" />
    <result column="contractSignedTime" property="contractsignedtime" jdbcType="DATE" />
    <result column="contractMoney" property="contractmoney" jdbcType="INTEGER" />
    <result column="contractContent" property="contractcontent" jdbcType="VARCHAR" />
    <result column="contractComment" property="contractcomment" jdbcType="VARCHAR" />
    <result column="contractDelete" property="contractdelete" jdbcType="INTEGER" />
    <result column="projectID" property="projectid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    contractID, contractSerial, contractName, contractOwner, contractPartner, contractSignedTime, 
    contractMoney, contractContent, contractComment, contractDelete, projectID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from contract
    where contractID = #{contractid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from contract
    where contractID = #{contractid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsxm.business.Contract" >
    insert into contract (contractID, contractSerial, contractName, 
      contractOwner, contractPartner, contractSignedTime, 
      contractMoney, contractContent, contractComment, 
      contractDelete, projectID)
    values (#{contractid,jdbcType=INTEGER}, #{contractserial,jdbcType=VARCHAR}, #{contractname,jdbcType=VARCHAR}, 
      #{contractowner,jdbcType=VARCHAR}, #{contractpartner,jdbcType=VARCHAR}, #{contractsignedtime,jdbcType=DATE}, 
      #{contractmoney,jdbcType=INTEGER}, #{contractcontent,jdbcType=VARCHAR}, #{contractcomment,jdbcType=VARCHAR}, 
      #{contractdelete,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jsxm.business.Contract" >
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        contractID,
      </if>
      <if test="contractserial != null" >
        contractSerial,
      </if>
      <if test="contractname != null" >
        contractName,
      </if>
      <if test="contractowner != null" >
        contractOwner,
      </if>
      <if test="contractpartner != null" >
        contractPartner,
      </if>
      <if test="contractsignedtime != null" >
        contractSignedTime,
      </if>
      <if test="contractmoney != null" >
        contractMoney,
      </if>
      <if test="contractcontent != null" >
        contractContent,
      </if>
      <if test="contractcomment != null" >
        contractComment,
      </if>
      <if test="contractdelete != null" >
        contractDelete,
      </if>
      <if test="projectid != null" >
        projectID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="contractserial != null" >
        #{contractserial,jdbcType=VARCHAR},
      </if>
      <if test="contractname != null" >
        #{contractname,jdbcType=VARCHAR},
      </if>
      <if test="contractowner != null" >
        #{contractowner,jdbcType=VARCHAR},
      </if>
      <if test="contractpartner != null" >
        #{contractpartner,jdbcType=VARCHAR},
      </if>
      <if test="contractsignedtime != null" >
        #{contractsignedtime,jdbcType=DATE},
      </if>
      <if test="contractmoney != null" >
        #{contractmoney,jdbcType=INTEGER},
      </if>
      <if test="contractcontent != null" >
        #{contractcontent,jdbcType=VARCHAR},
      </if>
      <if test="contractcomment != null" >
        #{contractcomment,jdbcType=VARCHAR},
      </if>
      <if test="contractdelete != null" >
        #{contractdelete,jdbcType=INTEGER},
      </if>
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsxm.business.Contract" >
    update contract
    <set >
      <if test="contractserial != null" >
        contractSerial = #{contractserial,jdbcType=VARCHAR},
      </if>
      <if test="contractname != null" >
        contractName = #{contractname,jdbcType=VARCHAR},
      </if>
      <if test="contractowner != null" >
        contractOwner = #{contractowner,jdbcType=VARCHAR},
      </if>
      <if test="contractpartner != null" >
        contractPartner = #{contractpartner,jdbcType=VARCHAR},
      </if>
      <if test="contractsignedtime != null" >
        contractSignedTime = #{contractsignedtime,jdbcType=DATE},
      </if>
      <if test="contractmoney != null" >
        contractMoney = #{contractmoney,jdbcType=INTEGER},
      </if>
      <if test="contractcontent != null" >
        contractContent = #{contractcontent,jdbcType=VARCHAR},
      </if>
      <if test="contractcomment != null" >
        contractComment = #{contractcomment,jdbcType=VARCHAR},
      </if>
      <if test="contractdelete != null" >
        contractDelete = #{contractdelete,jdbcType=INTEGER},
      </if>
      <if test="projectid != null" >
        projectID = #{projectid,jdbcType=INTEGER},
      </if>
    </set>
    where contractID = #{contractid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsxm.business.Contract" >
    update contract
    set contractSerial = #{contractserial,jdbcType=VARCHAR},
      contractName = #{contractname,jdbcType=VARCHAR},
      contractOwner = #{contractowner,jdbcType=VARCHAR},
      contractPartner = #{contractpartner,jdbcType=VARCHAR},
      contractSignedTime = #{contractsignedtime,jdbcType=DATE},
      contractMoney = #{contractmoney,jdbcType=INTEGER},
      contractContent = #{contractcontent,jdbcType=VARCHAR},
      contractComment = #{contractcomment,jdbcType=VARCHAR},
      contractDelete = #{contractdelete,jdbcType=INTEGER},
      projectID = #{projectid,jdbcType=INTEGER}
    where contractID = #{contractid,jdbcType=INTEGER}
  </update>
</mapper>