<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.CategoryMapper">
    <!--开启二级缓存-->
    <!--<cache/>-->
    <!--定义一个resultMap-->
    <resultMap id="CategoryBean" type="Category">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <!--一对多的关系, 进行延迟加载-->
        <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
        <!--由于调用了另一个命名空间中的方法, 所以select要把命名空间加上-->
        <collection property="products" ofType="Product" select="mapper.ProductMapper.getByCategoryId" column="id">
        </collection>
    </resultMap>

    <insert id="add" parameterType ="Category" useGeneratedKeys="true" keyProperty="id">
        insert into category_ values (null, #{name});

    </insert>
    <delete id="delete" parameterType="Category">
        delete from category_ where id = #{id}
    </delete>
    <update id="update" parameterType="Category">
        update category_ set name = #{name} where id= #{id}
    </update>
    <select id="getById" parameterType="_int" resultType="Category">
        select * from category_ where id = #{id}
    </select>

    <!--实现了延迟加载, 见categoryBean resultMap中的定义-->
    <select id="list" resultMap="CategoryBean">
        select * from  category_ c
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>
    <!--这里不是用的resultType, 而是resultMap，通过resultMap把数据取出来放在对应的对象属性里-->
    <!--<select id="listCategoryWithProduct" resultMap="categoryBean">-->
        <!--select c.*, p.*, c.id 'cid', p.id 'pid', c.name 'cname', p.name 'pname'-->
        <!--from category_ c left join product_ p on c.id = p.cid-->
    <!--</select>-->


</mapper>